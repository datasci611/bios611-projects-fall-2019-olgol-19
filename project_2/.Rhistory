shiny::runApp()
runApp()
runApp()
runApp()
# Define UI
ui <- fluidPage(theme = shinytheme("lumen"),
titlePanel("Urban Ministry of Durham Data Report"),
sidebarLayout(
sidebarPanel(
# Select type of trend to plot
selectInput(inputId = "type", label = strong("Data"),
choices = c("Client file number" = "Number of Clients",
"Food Pounds" = "Food Pounds",
"Diapers" = "Diapers",
"Clothing Items"= "Clothing Items",
"School Kits"="School Kits",
"Hygiene Kits"="Hygiene Kits"),
selected = "Number of Clients"),
# Select date range to be plotted
dateRangeInput("date", strong("Date range"), start = "2000-01-01", end = "2019-06-30",
min = "1983-01-01", max = "2019-06-30")
)
),
# Output: Description, lineplot, and reference
mainPanel(
plotOutput(outputId = "lineplot", height = "300px")#,
#textOutput(outputId = "desc"),
#tags$a(href = "https://raw.githubusercontent.com/biodatascience/datasci611/gh-pages/data/project1_2019/UMD_Services_Provided_20190719.tsv", "Data Source: Urban Ministry of Durham", target = "_blank")
)
)
runApp()
runApp()
runApp()
runApp()
library(tidyverse)
library(ggplot2)
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv")
View(UMD_data)
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv")
View(UMD_data)
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID)
View(UMD_data)
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
View(UMD_data)
View(UMD_data)
library(tidyverse)
library(ggplot2)
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
library(tidyverse)
library(ggplot2)
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
View(UMD_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
View(UMD_data)
# Gender information
Gender <- UMD_dat %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
Gender$label <- scales::percent(Gender$per)
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label))
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label)) +
theme_classic() +
ggtitle("Gender Distribution")
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label)) +
ggtitle("Gender Distribution")
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
Gender$label <- scales::percent(Gender$per)
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label)) +
ggtitle("Gender Distribution")
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
Gender$label <- scales::percent(Gender$per)
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label)) +
ggtitle("Gender Distribution")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
Gender$label <- scales::percent(Gender$per)
ggplot(data=Gender)+
geom_bar(aes(x="", y=per, fill=Gender), stat="identity", width = 1)+
coord_polar("y", start=0, direction = -1)+
theme_void()+
geom_text(aes(x=1, y = cumsum(per) - per/2, label=label)) +
ggtitle("Gender Distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Age Distribution
ggplot(data = UMD_data, aes(x=Age)) +
geom_histogram(alpha = 0.4) +
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Age Distribution
ggplot(data = UMD_data, aes(x=Age)) +
geom_histogram(alpha = 0.4, color="black", fill="white") +
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Age Distribution
ggplot(data = UMD_data, aes(x=Age)) +
geom_histogram(alpha = 0.4, color="black", fill="grey") +
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Age Distribution
ggplot(data = UMD_data, aes(x=Age)) +
geom_histogram(alpha = 0.4, color="black", fill="grey") +
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(aes(xintercept=mean(Age)),
color="blue", linetype="dashed", size=1)
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(fill="white", alpha=0.5, position="identity")
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.5, position="identity")
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.5, position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(aes(xintercept=mean(Age)),
color="blue", linetype="dashed", size=1)
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.5, position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.5, position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))+
scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9"))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.4, position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.4,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.4,fill="white", position="identity")+
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.4,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.7,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=1,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.1,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram()+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,color=Gender)) +
geom_histogram(alpha=0.1,fill="white", position="identity")+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,fill=Gender ,color=Gender)) +
geom_histogram(alpha=0.1)+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
ggplot(data = UMD_data, aes(x=Age,fill=Gender ,color=Gender)) +
geom_histogram(alpha=0.5)+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))
# Age/Gender Distribution
mu <- ddply(UMD_data, "Gender", summarise, grp.mean=mean(Age))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(dbplyr)
# Age/Gender Distribution
mu <- ddply(UMD_data, "Gender", summarise, grp.mean=mean(Age))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(plyr)
# Age/Gender Distribution
mu <- ddply(UMD_data, "Gender", summarise, grp.mean=mean(Age))
ggplot(data = UMD_data, aes(x=Age,fill=Gender ,color=Gender)) +
geom_histogram(alpha=0.5)+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(data=mu, aes(xintercept=grp.mean, color=sex),
linetype="dashed")
# Age/Gender Distribution
mu <- ddply(UMD_data, "Gender", summarise, grp.mean=mean(Age))
ggplot(data = UMD_data, aes(x=Age,fill=Gender ,color=Gender)) +
geom_histogram(alpha=0.5)+
theme_classic() +
xlab("Age distribution") +
ylab("Count") +
ggtitle("Age distribution by Gender")+
theme(plot.title = element_text(hjust = 0.5))+
geom_vline(data=mu, aes(xintercept=grp.mean, color=Gender),
linetype="dashed")
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.4, color="black", fill="grey") +
theme_classic() +
xlab("Race distribution") +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.4, color="black", fill="grey") +
theme_classic() +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.5, color="black", fill="grey") +
theme_classic() +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5))
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.5, color="black", fill="grey") +
theme_classic() +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5), axis.title.x=element_blank())
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.5, color="black", fill="grey") +
theme_classic() +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5), axis.title.x=element_blank())+
coord_flip()
# Race Distribution
ggplot(data = UMD_data, aes(x=Race)) +
geom_bar(alpha = 0.5, color="black", fill="grey") +
theme_classic() +
ylab("Count") +
ggtitle("Race distribution")+
theme(plot.title = element_text(hjust = 0.5), axis.title.y=element_blank())+
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(plyr)
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Gender))
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=n/sum(n)) %>%
arrange(desc(Gender))
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per='n'/sum('n')) %>%
arrange(desc(Gender))
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender_df <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per='n'/sum('n')) %>%
arrange(desc(Gender))
# remove duplicates, means that data for the first entry to the program
UMD_data <- read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-olgol-19/master/project_3/data/Final_data_for_analysis.csv") %>%
distinct(ID, .keep_all = TRUE)
# Gender information
Gender_df <- UMD_data %>%
group_by(Gender) %>%
count() %>%
ungroup() %>%
mutate(per=n/sum(n)) %>%
arrange(desc(Gender))
